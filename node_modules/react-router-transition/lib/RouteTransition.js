'use strict';

exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TransitionMotion = require('react-motion/lib/TransitionMotion');

var _TransitionMotion2 = _interopRequireDefault(_TransitionMotion);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ensureSpring = require('./ensureSpring');

var _ensureSpring2 = _interopRequireDefault(_ensureSpring);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var identity = function identity(val) {
  return val;
};

var RouteTransition = function (_Component) {
  _inherits(RouteTransition, _Component);

  function RouteTransition() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RouteTransition);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RouteTransition.__proto__ || Object.getPrototypeOf(RouteTransition)).call.apply(_ref, [this].concat(args))), _this), _this.willEnter = function () {
      return _this.props.atEnter;
    }, _this.willLeave = function () {
      return (0, _ensureSpring2.default)(_this.props.atLeave);
    }, _this.didLeave = function (styleThatLeft) {
      if (_this.props.didLeave) {
        _this.props.didLeave(styleThatLeft);
      }
    }, _this.renderRoute = function (config) {
      var props = {
        style: _this.props.mapStyles(config.style),
        key: config.key
      };

      return _this.props.wrapperComponent !== false ? (0, _react.createElement)(_this.props.wrapperComponent, props, config.data) : (0, _react.cloneElement)(config.data, props);
    }, _this.renderRoutes = function (interpolatedStyles) {
      return _react2.default.createElement(
        'div',
        { className: _this.props.className },
        interpolatedStyles.map(_this.renderRoute)
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(RouteTransition, [{
    key: 'getDefaultStyles',
    value: function getDefaultStyles() {
      if (!this.props.runOnMount) {
        return null;
      }

      if (!this.props.children) {
        return [];
      }

      return [{
        key: this.props.children.key,
        data: this.props.children,
        style: this.props.atEnter
      }];
    }

    // there's only ever one route mounted at a time,
    // so just return the current match

  }, {
    key: 'getStyles',
    value: function getStyles() {
      if (!this.props.children) {
        return [];
      }

      return [{
        key: this.props.children.key,
        data: this.props.children,
        style: (0, _ensureSpring2.default)(this.props.atActive)
      }];
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _TransitionMotion2.default,
        {
          defaultStyles: this.getDefaultStyles(),
          styles: this.getStyles(),
          willEnter: this.willEnter,
          willLeave: this.willLeave,
          didLeave: this.didLeave
        },
        this.renderRoutes
      );
    }
  }]);

  return RouteTransition;
}(_react.Component);

RouteTransition.defaultProps = {
  wrapperComponent: 'div',
  runOnMount: false,
  mapStyles: identity
};
exports.default = RouteTransition;